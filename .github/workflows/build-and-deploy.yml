name: Build and Deploy Electron App

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  release:
    types: [published]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            platform: linux
            artifact-name: fos-printer-linux
          - os: macos-latest
            platform: mac
            artifact-name: fos-printer-mac
          - os: windows-latest
            platform: win
            artifact-name: fos-printer-win

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "yarn"

      - name: Install yarn
        run: npm install -g yarn

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build Electron app
        run: yarn electron:build:all

      - name: Create zip files
        run: |
          cd release

          # Create platform-specific zip files
          if [ "${{ matrix.platform }}" = "mac" ]; then
            zip -r ../${{ matrix.artifact-name }}.zip "Food Order Printer-1.0.0-arm64.dmg"
          elif [ "${{ matrix.platform }}" = "win" ]; then
            zip -r ../${{ matrix.artifact-name }}.zip "Food Order Printer Setup 1.0.0.exe"
          elif [ "${{ matrix.platform }}" = "linux" ]; then
            zip -r ../${{ matrix.artifact-name }}.zip "Food Order Printer-1.0.0-arm64.AppImage"
          fi

          # Create all-platforms zip
          zip -r ../fos-printer-app.zip "Food Order Printer-1.0.0-arm64.dmg" "Food Order Printer Setup 1.0.0.exe" "Food Order Printer-1.0.0-arm64.AppImage" 2>/dev/null || true

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact-name }}-${{ matrix.os }}
          path: |
            ${{ matrix.artifact-name }}.zip
            fos-printer-app.zip
          retention-days: 30

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master' || github.event_name == 'release'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "yarn"

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build Electron app (for latest artifacts)
        run: yarn electron:build:all

      - name: Create final zip files
        run: |
          cd release

          # Create platform-specific zip files
          zip -r ../fos-printer-mac.zip "Food Order Printer-1.0.0-arm64.dmg"
          zip -r ../fos-printer-win.zip "Food Order Printer Setup 1.0.0.exe"
          zip -r ../fos-printer-linux.zip "Food Order Printer-1.0.0-arm64.AppImage"

          # Create all-platforms zip
          zip -r ../fos-printer-app.zip "Food Order Printer-1.0.0-arm64.dmg" "Food Order Printer Setup 1.0.0.exe" "Food Order Printer-1.0.0-arm64.AppImage"

      - name: Create version.json
        run: |
          echo '{
            "version": "${{ github.ref_name }}",
            "buildDate": "${{ github.event.head_commit.timestamp }}",
            "commit": "${{ github.sha }}"
          }' > version.json

      - name: Copy files to docs
        run: |
          cp fos-printer-*.zip docs/
          cp version.json docs/

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs
          force_orphan: true
